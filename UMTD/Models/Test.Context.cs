//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UMTD.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TestEntities : DbContext
    {
        public TestEntities()
            : base("name=TestEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<prcMaterialList_Result> prcMaterialList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcMaterialList_Result>("prcMaterialList");
        }
    
        public virtual ObjectResult<prcMethodList_Result> prcMethodList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcMethodList_Result>("prcMethodList");
        }
    
        public virtual int prcTestInsert(string name, string code)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcTestInsert", nameParameter, codeParameter);
        }
    
        public virtual int prcTestMaterialInsert(Nullable<int> testId, Nullable<int> materialId)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("TestId", testId) :
                new ObjectParameter("TestId", typeof(int));
    
            var materialIdParameter = materialId.HasValue ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcTestMaterialInsert", testIdParameter, materialIdParameter);
        }
    
        public virtual int prcTestMaterialRemove(Nullable<int> testId, Nullable<int> materialId)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("TestId", testId) :
                new ObjectParameter("TestId", typeof(int));
    
            var materialIdParameter = materialId.HasValue ?
                new ObjectParameter("MaterialId", materialId) :
                new ObjectParameter("MaterialId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcTestMaterialRemove", testIdParameter, materialIdParameter);
        }
    
        public virtual int prcTestMethodInsert(Nullable<int> testId, Nullable<int> methodId)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("TestId", testId) :
                new ObjectParameter("TestId", typeof(int));
    
            var methodIdParameter = methodId.HasValue ?
                new ObjectParameter("MethodId", methodId) :
                new ObjectParameter("MethodId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcTestMethodInsert", testIdParameter, methodIdParameter);
        }
    
        public virtual int prcTestMethodRemove(Nullable<int> testId, Nullable<int> methodId)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("TestId", testId) :
                new ObjectParameter("TestId", typeof(int));
    
            var methodIdParameter = methodId.HasValue ?
                new ObjectParameter("MethodId", methodId) :
                new ObjectParameter("MethodId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcTestMethodRemove", testIdParameter, methodIdParameter);
        }
    
        public virtual int prcTestParse(string code, string ruText, string enText, string method, string uom, string material)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var ruTextParameter = ruText != null ?
                new ObjectParameter("ruText", ruText) :
                new ObjectParameter("ruText", typeof(string));
    
            var enTextParameter = enText != null ?
                new ObjectParameter("enText", enText) :
                new ObjectParameter("enText", typeof(string));
    
            var methodParameter = method != null ?
                new ObjectParameter("Method", method) :
                new ObjectParameter("Method", typeof(string));
    
            var uomParameter = uom != null ?
                new ObjectParameter("Uom", uom) :
                new ObjectParameter("Uom", typeof(string));
    
            var materialParameter = material != null ?
                new ObjectParameter("Material", material) :
                new ObjectParameter("Material", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcTestParse", codeParameter, ruTextParameter, enTextParameter, methodParameter, uomParameter, materialParameter);
        }
    
        public virtual int prcTestRemove(Nullable<int> testId)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("TestId", testId) :
                new ObjectParameter("TestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcTestRemove", testIdParameter);
        }
    
        public virtual ObjectResult<prcTestSelectAll_Result> prcTestSelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcTestSelectAll_Result>("prcTestSelectAll");
        }
    
        public virtual int prcTestUomInsert(Nullable<int> testId, Nullable<int> uomId)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("TestId", testId) :
                new ObjectParameter("TestId", typeof(int));
    
            var uomIdParameter = uomId.HasValue ?
                new ObjectParameter("UomId", uomId) :
                new ObjectParameter("UomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcTestUomInsert", testIdParameter, uomIdParameter);
        }
    
        public virtual int prcTestUomRemove(Nullable<int> testId, Nullable<int> uomId)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("TestId", testId) :
                new ObjectParameter("TestId", typeof(int));
    
            var uomIdParameter = uomId.HasValue ?
                new ObjectParameter("UomId", uomId) :
                new ObjectParameter("UomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcTestUomRemove", testIdParameter, uomIdParameter);
        }
    
        public virtual ObjectResult<prcUomList_Result> prcUomList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcUomList_Result>("prcUomList");
        }
    }
}
